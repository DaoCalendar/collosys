@{
    var isAuthenticated = HttpContext.Current.User.Identity.IsAuthenticated;
    ViewBag.Title = "ColloSys";  
}
<!DOCTYPE html>
<!-- ReSharper disable UnknownCssClass -->
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js">
<!--<![endif]-->
<!-- ReSharper restore UnknownCssClass -->
<head>
    <title>@ViewBag.Title</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    @Scripts.Render("~/bundles/modernizr")
    @Styles.Render("~/bundles/styles")

    <script>
        var mvcBaseUrl = "@Url.Content("~")";
        var csdata = {};
        document.write('<base href="' + mvcBaseUrl + '" />');
    </script>

    @RenderSection("styles", false)
</head>

<body class="back-image ng-cloak" data-ng-cloak="" id="ng-app" data-ng-app="ui.collosys" data-ng-controller="csAppRootController">

    <!--[if  lte IE 8]>
        <script type="text/javascript" 
                src="http://ajax.googleapis.com/ajax/libs/chrome-frame/1/CFInstall.min.js"></script>
        <style>
            .chromeFrameInstallDefaultStyle {
                width: 100%; /* default is 800px */
                border: 5px solid blue;
            }
        </style>

        <div id="prompt">
        <!-- if IE without GCF, prompt goes here 
        </div>-->

    @* ReSharper disable UseOfImplicitGlobalInFunctionScope *@
    <script>
        // The conditional ensures that this code will only execute in IE,
        // Therefore we can use the IE-specific attachEvent without worry
        try {
            if (CFInstall) {
                window.attachEvent("onload", function () {
                    CFInstall.check({
                        mode: "inline", // the default
                        node: "prompt"
                    });
                });
            }
        } catch (e) {
        }
    </script>
    @* ReSharper restore UseOfImplicitGlobalInFunctionScope *@
    <![endif]-->

    <!-- header Bar -->
    @if (isAuthenticated)
    {
        <div class="row-fluid" id="main">
            <div class="span1" id="menuleft">
                <div class="cssmenu">
                    @Html.MvcSiteMap().Menu("BootstrapVerticalMenu")
                </div>
            </div>
            <div class="span11" id="bodyContent">
                <div style="margin-left: 50px">
                    @RenderBody()
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="span9 round-corners" style="margin-top: 20px;">
            @RenderBody()
        </div>
    }

    <!-- modal popup for progress bar -->
    <div data-ng-show="loadingElement.showLoadingElement" class="loading-element">
        <i class="icon-spinner icon-spin icon-5x icon-white"></i>
        <br />
        <span>{{loadingElement.loadingElementText}} {{loadingElement.stopwatch.data.stringValue}}</span>
    </div>

    <footer>
        <div class="row-fluid bottom">
            <div style="margin-right: 5px;">&copy;@DateTime.Now.Year <i>AlgoSys Tech Pvt. Ltd.</i></div>
        </div>
    </footer>


    <!--[if lte IE 8]> <script src="~/Scripts/json3.min.js"></script> <![endif]-->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/angular")

    <script type="text/javascript">
        csapp.controller("csAppRootController", ["$rootScope", "csStopWatch", function ($rootScope, $csStopWatch) {
            $rootScope.loadingElement.stopwatch = $csStopWatch;
            $rootScope.loadingElement.showLoadingElement = false;
            $rootScope.loadingElement.loadingElementText = "processing...";
            $rootScope.loadingElement.disableSpiner = false;

            $rootScope.$watch("loadingElement.waitingForServerResponse", function () {
                if ($rootScope.loadingElement.disableSpiner === true) {
                    $rootScope.loadingElement.disableSpiner = false;
                    return;
                }

                if ($rootScope.loadingElement.waitingForServerResponse === true) {
                    $rootScope.loadingElement.stopwatch.start();
                    $rootScope.loadingElement.showLoadingElement = true;
                } else {
                    $rootScope.loadingElement.showLoadingElement = false;
                    $rootScope.loadingElement.stopwatch.reset();
                    $rootScope.loadingElement.loadingElementText = "processing...";
                }
            });

            $rootScope.hideSpiner = function () {
                $rootScope.loadingElement.disableSpiner = true;
            };

        }]);
    </script>

    @RenderSection("scripts", false)
</body>
</html>
